{"version":3,"sources":["icons/phone.svg","icons/email.svg","icons/code.svg","icons/Squash_Niagara_Logo.png","icons/004.png","icons/expensify.png","icons/task-api.png","icons/indApp.png","components/ContactPage.js","components/Header.js","components/LandingPage.js","components/PortfolioApp.js","components/ProjectItem.js","fixtures/projects.js","components/ProjectsPage.js","Routers/PorfolioRouter.js","serviceWorker.js","index.js","icons/weather-app.png"],"names":["module","exports","Title","Typography","ContactPage","Fragment","className","href","style","width","src","emailIcon","alt","color","pIcon","withRouter","location","pathname","to","theme","mode","defaultSelectedKeys","Item","key","LandingPage","PortfolioApp","icon","maxWidth","float","Meta","Card","ProjectItem","cover","project","useState","visible","setVisible","handleOk","title","squashPic","expensifyPic","stackpolePic","taskApiImg","weatherAppImg","indAppImg","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","transitionName","borderColor","actions","github","GithubOutlined","link","LinkOutlined","onClick","EllipsisOutlined","description","skills","map","skill","onOk","onCancel","marginBottom","projectsData","skillsData","sort","ProjectsPage","projects","filteredProjects","setfilteredProjects","type","shape","filter","includes","skillFilter","Content","Layout","Sider","PortfolioRouter","minHeight","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.17a14cb3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/phone.a94a4562.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.0a7980e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/code.7b51dbd4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Squash_Niagara_Logo.bcb51180.png\";","module.exports = __webpack_public_path__ + \"static/media/004.184a5d7c.png\";","module.exports = __webpack_public_path__ + \"static/media/expensify.388dfb45.png\";","module.exports = __webpack_public_path__ + \"static/media/task-api.291a2355.png\";","module.exports = __webpack_public_path__ + \"static/media/indApp.7f452211.png\";","import React from 'react';\r\nimport { Typography } from 'antd';\r\nimport pIcon from '../icons/phone.svg'\r\nimport emailIcon from '../icons/email.svg'\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nconst ContactPage = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"header\">\r\n          <h1 className=\"header__title\">Get in Touch!</h1>\r\n        </div>\r\n        <div>\r\n          \r\n          <div className=\"container\">\r\n            <div className=\"contact-icons\">\r\n              <div className=\"contact-icons__item\">              \r\n                <a href=\"mailto: ymurillov@gmail.com\">\r\n                  <img style={{width: 250}} src={emailIcon} alt=\"email icon\" />\r\n                  <Title style={{color: \"#364051\"}}>ymurillov@gmail.com</Title>\r\n                </a>\r\n              </div>\r\n              <div  className=\"contact-icons__item\">\r\n                <a href=\"tel:9059841012\">\r\n                  <img style={{width: 250}} src={pIcon} alt=\"telephon icon\"/>\r\n                  <Title style={{color: \"#364051\"}}>9059841012</Title>\r\n                </a>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        \r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport { ContactPage as default }","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Menu } from 'antd'\r\n\r\nconst Header = ({ location }) => {\r\n\r\n  if(location.pathname === '/react-portfolio'){\r\n    return null\r\n  }\r\n  else{\r\n    return (\r\n      <div>\r\n        <div className=\"logo\">\r\n          <Link to=\"/react-portfolio\"><h1>YM</h1></Link>\r\n        </div>\r\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n              <Menu.Item key=\"1\"><Link to=\"/\"> Home </Link></Menu.Item>\r\n              <Menu.Item key=\"2\"><Link to=\"/projects\"> Projects </Link></Menu.Item>\r\n              <Menu.Item key=\"3\"><Link to=\"/contact\"> Contact Me</Link></Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(Header)","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LandingPage = () => (\r\n    <div className=\"landing\">\r\n        <div className=\"landing__background\">          \r\n            <h1 className=\"landing__title\">Hi, I am Yorguin. I build Web-Apps</h1>\r\n\r\n            <div className=\"landing__bottom\">                \r\n                <Link className=\"landing__link\" to={'/'}>Learn more about what I do...</Link>\r\n            </div>       \r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport { LandingPage as default }","import React from 'react';\r\nimport icon from '../icons/code.svg'\r\n\r\n\r\nconst PortfolioApp = () => {\r\n\r\n  const svgStyle = {\r\n    maxWidth: '15em',\r\n    float: 'right'\r\n  }\r\n    return ( \r\n    <div>\r\n      <div className=\"header\">\r\n        <h1 className=\"header__title\">Full Stack Software Developer </h1>\r\n      </div>\r\n        <h1 className=\"header__subtitle\"> I design and code beautiful simple things.</h1>\r\n        <div className=\"container\">\r\n        \r\n          <h1 className=\"container_centered\">Graduated from Niagara College with an advance diploma on Computer Programming Analyst. I posses many skills developed trough practical\r\n          experience, and interships. Designed, Planned and Deployed multiple full-stack web-applications. I am proeficient with JavaScript, C#, and PHP.</h1>\r\n          <img src={icon} style={svgStyle} alt=\"svg \"/>\r\n      </div>\r\n        </div>  \r\n        \r\n      \r\n    )\r\n}\r\n\r\nexport { PortfolioApp as default } ","import React, { useState } from 'react';\r\nimport { Card, Modal } from 'antd';\r\nimport { LinkOutlined, EllipsisOutlined, GithubOutlined } from '@ant-design/icons';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\r\nimport squashPic from '../icons/Squash_Niagara_Logo.png'\r\nimport stackpolePic from '../icons/004.png'\r\nimport expensifyPic from '../icons/expensify.png'\r\nimport taskApiImg from '../icons/task-api.png'\r\nimport weatherAppImg  from '../icons/weather-app.png'\r\nimport indAppImg from '../icons/indApp.png'\r\n\r\n\r\nconst { Meta } = Card;\r\n\r\nconst ProjectItem = ( { project } ) => {\r\n\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const showModal = () => {\r\n        setVisible(true)\r\n    }\r\n\r\n    const handleOk = () => {\r\n        setVisible(false)\r\n    }\r\n\r\n    let cover\r\n    switch(project.title){\r\n        case 'Community Sponsored Project':\r\n            cover = squashPic\r\n            break\r\n        case 'Expensify':\r\n            cover = expensifyPic\r\n            break\r\n        case 'Financial WebApp':\r\n            cover = stackpolePic\r\n            break\r\n        case 'Task Application REST API':\r\n            cover = taskApiImg\r\n            break\r\n        case 'Weather App - Web server':\r\n            cover = weatherAppImg\r\n            break\r\n        case 'Indecision App':\r\n                cover = indAppImg\r\n                break    \r\n        default:\r\n            cover = weatherAppImg\r\n    }\r\n    return (\r\n        <div className=\"grid-item\">  \r\n            <ReactCSSTransitionGroup\r\n            transitionAppear={true}\r\n            transitionAppearTimeout={600}\r\n            transitionEnterTimeout={600}\r\n            transitionLeaveTimeout={200}\r\n            transitionName=\"SlideIn\"\r\n        > \r\n            <Card\r\n                style={{width:275, borderColor:'#364051'}}\r\n                cover={<img alt=\"example\" src={cover} />}\r\n                actions={[\r\n                    project.github ? <a href={project.github}><GithubOutlined  key=\"github\" /></a> : null,\r\n                    project.link ? <a href={project.link}><LinkOutlined key=\"link\" /></a> : null,\r\n                   // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n                   <a  onClick={showModal}> <EllipsisOutlined key=\"ellipsis\" /></a>,\r\n                  ]}\r\n            >\r\n                <Meta \r\n                title={project.title} \r\n                description={project.skills.map((skill) => skill + ' ')}  \r\n                />\r\n            </Card>\r\n            <Modal\r\n            title={project.title}\r\n            visible={visible}\r\n            onOk={handleOk}\r\n            onCancel={handleOk}\r\n            >\r\n            <img style={{maxWidth: '100%', marginBottom: 10}} alt=\"example\" src={cover} />\r\n            <p>{project.description}</p>\r\n            </Modal>\r\n        </ReactCSSTransitionGroup>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport { ProjectItem as default }\r\n","export const projectsData = [{\r\n    title: 'Community Sponsored Project',\r\n    description: 'Being a member contributing to the front end and back end in the team Bits N’ Bytes, we developed a website for Niagara Squash including Authentication and Authorization systems, business logic, and user friendly interfaces. I also was the bridge between my team and the client during the meetings.',\r\n    skills: ['C#', 'SQL', 'JQuery', 'SCSS', 'Bootstrap'],\r\n},\r\n{\r\n    title: 'Expensify',\r\n    description: 'Expenses app. Created in react with Redux mangement state. It contains google authentication system and it complies with UX standards.',\r\n    skills: ['React', 'Firebase', 'Redux', 'SCSS'],\r\n    github: 'https://github.com/Crisest/expensify',\r\n    link: 'https://warm-basin-98453.herokuapp.com/'\r\n},\r\n{\r\n    title: 'Financial WebApp',\r\n    description: 'Web application created for Stackpole International independenly. This web-app was made for the finance department with the goal of optimizing the approval time that budget request takes. It also had the purpose to eliminate paper request trough the department. Another feature was to facilitate the process of asset transfers within the company.',\r\n    skills: ['PHP', 'MySQL', 'JQuery', 'Bootstrap'],\r\n},\r\n{\r\n    title: 'Task Application REST API',\r\n    description: 'Fully functional REST API made with Node.js and Express. It uses JSON web tokens to Authenticate the Users and MongoDB / Mongo Atlas to store the data. It was completely tested and deployed',\r\n    skills: ['Nodejs', 'MongoDB', 'Express'],\r\n    github: 'https://github.com/Crisest/task-app',\r\n    link: 'https://task-manager-yorguin.herokuapp.com/'\r\n}, \r\n{\r\n    title: 'Weather App - Web server',\r\n    description: 'Simple App that fetches data from third party APIs. The API fetches data from darkskynet and uses Geocoders to parse the location given.',\r\n    skills: ['Nodejs', 'Bootstrap'],\r\n    link: 'https://crisest-weather-app.herokuapp.com/',\r\n    github: 'https://github.com/Crisest/web-server-node'\r\n}, \r\n{\r\n    title: 'Indecision App',\r\n    description: 'Task app that will decide for you the next task.',\r\n    skills: ['React', 'SCSS', 'Express'],\r\n    link: 'https://indapp-crisest.herokuapp.com/',\r\n    github: 'https://github.com/Crisest/Todo-React'\r\n}]\r\n\r\nexport const skillsData = ['React', 'Firebase', 'Redux', 'C#', 'SQL', 'SCSS', 'PHP', 'MySQL', 'JQuery', 'Nodejs', 'MongoDB', 'Express', 'Bootstrap'].sort()","import React, { useState } from 'react';\r\nimport { Button } from 'antd'\r\nimport ProjectItem from './ProjectItem'\r\nimport { projectsData , skillsData} from '../fixtures/projects'\r\n\r\nconst ProjectsPage = () => {\r\n\r\n    const [projects] = useState(projectsData)   \r\n    const [filteredProjects, setfilteredProjects] = useState(projectsData)\r\n    const [skills] = useState(skillsData)\r\n\r\n    const skillFilter = (skill) => {\r\n        setfilteredProjects(projects.filter((project) => {\r\n            return project.skills.includes(skill)\r\n        }))\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"header\">\r\n            <h1 className=\"header__title\">Projects </h1>\r\n        </div>\r\n        <div className=\"button-list\">\r\n            {skills.map((skill) => (        \r\n                <Button className=\"list__button\" type=\"danger\" shape=\"round\" key={skill} onClick={() => {\r\n                    skillFilter(skill)\r\n                }}>{skill}</Button>\r\n            ))}\r\n            <Button className=\"list__button\" type=\"primary\" onClick={() => setfilteredProjects(projectsData)}>All</Button>\r\n        </div>\r\n        <div className=\"container\">\r\n            <div className=\"projects-list\">\r\n\r\n                {filteredProjects.map((filter) => (          \r\n                    <ProjectItem project={filter} key={filter.title}/>\r\n                )).sort()}\r\n            \r\n            </div>\r\n\r\n        </div>\r\n\r\n        \r\n      </div>\r\n    )\r\n}\r\n\r\nexport { ProjectsPage as default }","import React, { Fragment } from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport { Layout } from 'antd'\r\nimport ContactPage from '../components/ContactPage'\r\nimport Header from '../components/Header'\r\nimport LandingPage from '../components/LandingPage'\r\nimport PortfolioApp from '../components/PortfolioApp'\r\nimport ProjectsPage from '../components/ProjectsPage'\r\n\r\n\r\n\r\nconst { Content, Sider } = Layout\r\n\r\n\r\nconst PortfolioRouter =  () => (\r\n  <Layout className=\"layout\" style={{ minHeight: '100vh' }}>\r\n      <Router> \r\n        <Switch>\r\n          <Route path=\"/react-portfolio\" component={LandingPage} />\r\n          <Fragment>\r\n          <Sider>\r\n            <Header />\r\n            </Sider>\r\n            <Content>\r\n              <Route exact path=\"/\" component={PortfolioApp}/>\r\n              <Route exact path=\"/projects\" component={ProjectsPage} />\r\n              <Route path=\"/contact\" component={ContactPage} />\r\n            </Content>\r\n          </Fragment>\r\n        </Switch>\r\n      </Router>\r\n    </Layout>\r\n)\r\n\r\nexport { PortfolioRouter as default }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PortfolioRouter from './Routers/PorfolioRouter'\nimport * as serviceWorker from './serviceWorker';\nimport './index.less'\n\nReactDOM.render(\n  <React.Fragment>\n    <PortfolioRouter />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/weather-app.d3a0a421.png\";"],"sourceRoot":""}